using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TranslationTool
{
    class CodePage
    {
        public static bool isCP936_asc(byte[] bString)
        {
            int num2 = 0;
            for (int i = 0; i < bString.Length - 1;)
            {
                byte num1 = bString[i];
                byte num3 = bString[i + 1];
                int num4 = (num1 * 0x100) + num3;
                if ((num1 & 0x80) == 0)
                {
                    i++;
                    continue;
                }
                num2 = 0;
                while (num2 < 0x105)
                {
                    if ((CP936Table[num2, 0] <= num4) && (num4 <= CP936Table[num2, 1]))
                    {
                        i += 2;
                        break;
                    }
                    num2++;
                }
                if (num2 == 0x105)
                {
                    return false;
                }
            }
            return true;
        }

        public static bool isCP949_asc(byte[] bString) //좀 최적화.
        {
            int num2 = 0;
            for (int i = 0; i < bString.Length - 1;)
            {
                byte num1 = bString[i];
                byte num3 = bString[i + 1];
                int num4 = (num1 * 0x100) + num3;
                if ((num1 & 0x80) == 0)
                {
                    i++;
                    continue;
                }
                num2 = 0;
                while (num2 < 12)
                {
                    if ((CP949Table[num2, 0] <= num4) && (num4 <= CP949Table[num2, 1]))
                    {
                        i += 2;
                        break;
                    }
                    num2++;
                }
                if (num2 == 12)
                {
                    return false;
                }

            }
            return true;
        }

        public static bool IsPrintAbleStr(byte[] bString)
        {
            for (int i = 0; i < bString.Length; i++)
            {
                if (bString[i] == 0xff)
                    return false;
            }
            return true;
        }
        public static bool IsAscii(byte[] bString)
        {
            for (int i = 0; i < bString.Length; i++)
            {
                if ( !( (bString[i] >= 9 && bString[i] <= 0xD) || (bString[i] >= 32 && bString[i] <= 127) ) )
                    return false;
            }
            return true;
        }

        static int[,] CP936Table = new int[,] {
                { 0x8140, 0x817e }, { 0x8180, 0x81fe }, { 0x8240, 0x827e }, { 0x8280, 0x82fe }, { 0x8340, 0x837e }, { 0x8380, 0x83fe }, { 0x8440, 0x847e }, { 0x8480, 0x84fe }, { 0x8540, 0x857e }, { 0x8580, 0x85fe }, { 0x8640, 0x867e }, { 0x8680, 0x86fe }, { 0x8740, 0x877e }, { 0x8780, 0x87fe }, { 0x8840, 0x887e }, { 0x8880, 0x88fe },
                { 0x8940, 0x897e }, { 0x8980, 0x89fe }, { 0x8a40, 0x8a7e }, { 0x8a80, 0x8afe }, { 0x8b40, 0x8b7e }, { 0x8b80, 0x8bfe }, { 0x8c40, 0x8c7e }, { 0x8c80, 0x8cfe }, { 0x8d40, 0x8d7e }, { 0x8d80, 0x8dfe }, { 0x8e40, 0x8e7e }, { 0x8e80, 0x8efe }, { 0x8f40, 0x8f7e }, { 0x8f80, 0x8ffe }, { 0x9040, 0x907e }, { 0x9080, 0x90fe },
                { 0x9140, 0x917e }, { 0x9180, 0x91fe }, { 0x9240, 0x927e }, { 0x9280, 0x92fe }, { 0x9340, 0x937e }, { 0x9380, 0x93fe }, { 0x9440, 0x947e }, { 0x9480, 0x94fe }, { 0x9540, 0x957e }, { 0x9580, 0x95fe }, { 0x9640, 0x967e }, { 0x9680, 0x96fe }, { 0x9740, 0x977e }, { 0x9780, 0x97fe }, { 0x9840, 0x987e }, { 0x9880, 0x98fe },
                { 0x9940, 0x997e }, { 0x9980, 0x99fe }, { 0x9a40, 0x9a7e }, { 0x9a80, 0x9afe }, { 0x9b40, 0x9b7e }, { 0x9b80, 0x9bfe }, { 0x9c40, 0x9c7e }, { 0x9c80, 0x9cfe }, { 0x9d40, 0x9d7e }, { 0x9d80, 0x9dfe }, { 0x9e40, 0x9e7e }, { 0x9e80, 0x9efe }, { 0x9f40, 0x9f7e }, { 0x9f80, 0x9ffe }, { 0xa040, 0xa07e }, { 0xa080, 0xa0fe },
                { 0xa1a1, 0xa1fe }, { 0xa2a1, 0xa2aa }, { 0xa2b1, 0xa2e2 }, { 0xa2e5, 0xa2ee }, { 0xa2f1, 0xa2fc }, { 0xa3a1, 0xa3fe }, { 0xa4a1, 0xa4f3 }, { 0xa5a1, 0xa5f6 }, { 0xa6a1, 0xa6b8 }, { 0xa6c1, 0xa6d8 }, { 0xa6e0, 0xa6eb }, { 0xa6ee, 0xa6f2 }, { 0xa6f4, 0xa6f5 }, { 0xa7a1, 0xa7c1 }, { 0xa7d1, 0xa7f1 }, { 0xa840, 0xa87e },
                { 0xa880, 0xa895 }, { 0xa8a1, 0xa8bb }, { 0xa8bd, 0xa8be }, { 0xa8c0, 0xa8c0 }, { 0xa8c5, 0xa8e9 }, { 0xa940, 0xa957 }, { 0xa959, 0xa95a }, { 0xa95c, 0xa95c }, { 0xa960, 0xa97e }, { 0xa980, 0xa988 }, { 0xa996, 0xa996 }, { 0xa9a4, 0xa9ef }, { 0xaa40, 0xaa7e }, { 0xaa80, 0xaaa0 }, { 0xab40, 0xab7e }, { 0xab80, 0xaba0 },
                { 0xac40, 0xac7e }, { 0xac80, 0xaca0 }, { 0xad40, 0xad7e }, { 0xad80, 0xada0 }, { 0xae40, 0xae7e }, { 0xae80, 0xaea0 }, { 0xaf40, 0xaf7e }, { 0xaf80, 0xafa0 }, { 0xb040, 0xb07e }, { 0xb080, 0xb0fe }, { 0xb140, 0xb17e }, { 0xb180, 0xb1fe }, { 0xb240, 0xb27e }, { 0xb280, 0xb2fe }, { 0xb340, 0xb37e }, { 0xb380, 0xb3fe },
                { 0xb440, 0xb47e }, { 0xb480, 0xb4fe }, { 0xb540, 0xb57e }, { 0xb580, 0xb5fe }, { 0xb640, 0xb67e }, { 0xb680, 0xb6fe }, { 0xb740, 0xb77e }, { 0xb780, 0xb7fe }, { 0xb840, 0xb87e }, { 0xb880, 0xb8fe }, { 0xb940, 0xb97e }, { 0xb980, 0xb9fe }, { 0xba40, 0xba7e }, { 0xba80, 0xbafe }, { 0xbb40, 0xbb7e }, { 0xbb80, 0xbbfe },
                { 0xbc40, 0xbc7e }, { 0xbc80, 0xbcfe }, { 0xbd40, 0xbd7e }, { 0xbd80, 0xbdfe }, { 0xbe40, 0xbe7e }, { 0xbe80, 0xbefe }, { 0xbf40, 0xbf7e }, { 0xbf80, 0xbffe }, { 0xc040, 0xc07e }, { 0xc080, 0xc0fe }, { 0xc140, 0xc17e }, { 0xc180, 0xc1fe }, { 0xc240, 0xc27e }, { 0xc280, 0xc2fe }, { 0xc340, 0xc37e }, { 0xc380, 0xc3fe },
                { 0xc440, 0xc47e }, { 0xc480, 0xc4fe }, { 0xc540, 0xc57e }, { 0xc580, 0xc5fe }, { 0xc640, 0xc67e }, { 0xc680, 0xc6fe }, { 0xc740, 0xc77e }, { 0xc780, 0xc7fe }, { 0xc840, 0xc87e }, { 0xc880, 0xc8fe }, { 0xc940, 0xc97e }, { 0xc980, 0xc9fe }, { 0xca40, 0xca7e }, { 0xca80, 0xcafe }, { 0xcb40, 0xcb7e }, { 0xcb80, 0xcbfe },
                { 0xcc40, 0xcc7e }, { 0xcc80, 0xccfe }, { 0xcd40, 0xcd7e }, { 0xcd80, 0xcdfe }, { 0xce40, 0xce7e }, { 0xce80, 0xcefe }, { 0xcf40, 0xcf7e }, { 0xcf80, 0xcffe }, { 0xd040, 0xd07e }, { 0xd080, 0xd0fe }, { 0xd140, 0xd17e }, { 0xd180, 0xd1fe }, { 0xd240, 0xd27e }, { 0xd280, 0xd2fe }, { 0xd340, 0xd37e }, { 0xd380, 0xd3fe },
                { 0xd440, 0xd47e }, { 0xd480, 0xd4fe }, { 0xd540, 0xd57e }, { 0xd580, 0xd5fe }, { 0xd640, 0xd67e }, { 0xd680, 0xd6fe }, { 0xd740, 0xd77e }, { 0xd780, 0xd7f9 }, { 0xd840, 0xd87e }, { 0xd880, 0xd8fe }, { 0xd940, 0xd97e }, { 0xd980, 0xd9fe }, { 0xda40, 0xda7e }, { 0xda80, 0xdafe }, { 0xdb40, 0xdb7e }, { 0xdb80, 0xdbfe },
                { 0xdc40, 0xdc7e }, { 0xdc80, 0xdcfe }, { 0xdd40, 0xdd7e }, { 0xdd80, 0xddfe }, { 0xde40, 0xde7e }, { 0xde80, 0xdefe }, { 0xdf40, 0xdf7e }, { 0xdf80, 0xdffe }, { 0xe040, 0xe07e }, { 0xe080, 0xe0fe }, { 0xe140, 0xe17e }, { 0xe180, 0xe1fe }, { 0xe240, 0xe27e }, { 0xe280, 0xe2fe }, { 0xe340, 0xe37e }, { 0xe380, 0xe3fe },
                { 0xe440, 0xe47e }, { 0xe480, 0xe4fe }, { 0xe540, 0xe57e }, { 0xe580, 0xe5fe }, { 0xe640, 0xe67e }, { 0xe680, 0xe6fe }, { 0xe740, 0xe77e }, { 0xe780, 0xe7fe }, { 0xe840, 0xe87e }, { 0xe880, 0xe8fe }, { 0xe940, 0xe97e }, { 0xe980, 0xe9fe }, { 0xea40, 0xea7e }, { 0xea80, 0xeafe }, { 0xeb40, 0xeb7e }, { 0xeb80, 0xebfe },
                { 0xec40, 0xec7e }, { 0xec80, 0xecfe }, { 0xed40, 0xed7e }, { 0xed80, 0xedfe }, { 0xee40, 0xee7e }, { 0xee80, 0xeefe }, { 0xef40, 0xef7e }, { 0xef80, 0xeffe }, { 0xf040, 0xf07e }, { 0xf080, 0xf0fe }, { 0xf140, 0xf17e }, { 0xf180, 0xf1fe }, { 0xf240, 0xf27e }, { 0xf280, 0xf2fe }, { 0xf340, 0xf37e }, { 0xf380, 0xf3fe },
                { 0xf440, 0xf47e }, { 0xf480, 0xf4fe }, { 0xf540, 0xf57e }, { 0xf580, 0xf5fe }, { 0xf640, 0xf67e }, { 0xf680, 0xf6fe }, { 0xf740, 0xf77e }, { 0xf780, 0xf7fe }, { 0xf840, 0xf87e }, { 0xf880, 0xf8a0 }, { 0xf940, 0xf97e }, { 0xf980, 0xf9a0 }, { 0xfa40, 0xfa7e }, { 0xfa80, 0xfaa0 }, { 0xfb40, 0xfb7e }, { 0xfb80, 0xfba0 },
                { 0xfc40, 0xfc7e }, { 0xfc80, 0xfca0 }, { 0xfd40, 0xfd7e }, { 0xfd80, 0xfda0 }, { 0xfe40, 0xfe4f }
            };

        static int[,] CP949Table = new int[,] { { 0x8141, 0xa1a0 }, { 0xa241, 0xa2a0 }, { 0xa341, 0xa3a0 }, { 0xa441, 0xa5a0 }, { 0xa641, 0xa6a0 }, { 0xa741, 0xa7a0 }, { 0xa841, 0xa8a0 }, { 0xa941, 0xa9a0 }, { 0xaa41, 0xaaa0 }, { 0xab41, 0xaba0 }, { 0xac41, 0xaca0 }, { 0xad41, 0xc8fe } };


    }


}
